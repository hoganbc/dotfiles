let g:LargeFile = 100           " Don't syntax highlight files larger than NUM megs
syntax enable

" Do not set tabstop, shiftwidth, or softtabstop here to allow filetype defaults
" to be used. To override, put the setting in an ftplugin after file.

set autoindent
set backspace=indent,eol,start  " Backspace across lines and indent
set expandtab                   " Ignore tabs and replace with spaces
set history=50
set ignorecase                  " Case insensitive matching
set incsearch
set laststatus=2                " Always show status line
set lazyredraw                  " Performance booster
set linebreak                   " Wrap lines at word boundaries
set list                        " Toggle on listchars
set listchars=tab:>-,trail:-    " Visually prefix tabs with '>' and trailing whitespace with '-'
set modelines=0                 " Disable due to vulnerabilities
set nocompatible                " Vim defaults
set nofoldenable                " Disable folds
set nomodeline                  " Disable due to vulnerabilities
set notimeout
set number                      " Use line numbers
set ruler
set relativenumber              " Line numbers are relative to the current line
set scrolloff=1                 " Don't let the cursor get too close to the edge
set showcmd                     " Show (partial) command in the status line
set showmatch                   " Highlight matching brackets
set spelllang=en_us             " Load en-US spelling dictionary
set smarttab                    " <Tab> inserts blanks according shiftwidth
set splitbelow
set splitright
set suffixes=.bak.~,swp,.o,.info,.aux,.log,.out,.class,.pyc,.ts.d   " Lower priority files when auto-completing file names
set textwidth=80
set virtualedit=block           " Let cursor be in a virtual character space on visual block
set wildmenu                    " Visual autocomplete for comamnd menu
set wildmode=list:longest,full  " List all options, match the longest

" -----------------------------
" Movement
" -----------------------------

set whichwrap+=<,>,[,],h,~    " Arrow keys can wrap in normal mode

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" split navigations
nnoremap <C-J> <C-W><C-J>       " Ctrl+J to move down a split
nnoremap <C-K> <C-W><C-K>       " Ctrl+K to move up a split
nnoremap <C-L> <C-W><C-L>       " Ctrl+L to move right a split
nnoremap <C-H> <C-W><C-H>       " Ctrl+H to move left a split

" disable arrow keys, force HJKL
nnoremap <Left> :echo "No left for you! Use 'h'."<CR>
vnoremap <Left> :<C-u>echo "No left for you! Use 'h'."<CR>
inoremap <Left> <C-o>:echo "No left for you! Use 'h'."<CR>
nnoremap <Right> :echo "No right for you! Use 'l'."<CR>
vnoremap <Right> :<C-u>echo "No right for you! Use 'l'."<CR>
inoremap <Right> <C-o>:echo "No right for you! Use 'l'."<CR>
nnoremap <Up> :echo "No up for you! Use 'k'."<CR>
vnoremap <Up> :<C-u>echo "No up for you! Use 'k'."<CR>
inoremap <Up> <C-o>:echo "No up for you! Use 'k'."<CR>
nnoremap <Down> :echo "No down for you! Use 'j'."<CR>
vnoremap <Down> :<C-u>echo "No down for you! Use 'j'."<CR>
inoremap <Down> <C-o>:echo "No down for you! Use 'j'."<CR>

" -----------------------------
" File Type mappings
" -----------------------------
filetype indent plugin on       " Turn on ft detection, ft plugins, and ft indents

augroup filetypes
    autocmd!
    autocmd BufNewFile,BufRead *.git/{,worktrees/*/}{COMMIT_EDIT,TAG_EDIT,MERGE,_,}MSG set filetype=gitcommit
    autocmd BufNewFile *.git/config,.gitconfig,gitconfig set filetype=gitconfig
    autocmd BufNewFile,BufRead git-rebase-todo set filetype=gitrebase
    autocmd BufNewFile,BufRead *.vim.symlink set filetype=vim
augroup END

" -----------------------------
" File Type automation
"
" Too common to be in <filtetype>.vim, unless there's a better way to add it
" -----------------------------
augroup automation
    autocmd!
    " Remove trailing whitespace
    " http://vim.wikia.com/wiki/Remove_unwated_spaces
    autocmd FileType shell,vim,yaml,python,markdown,ruby,gitcommit,gitconfig,gitrebase,javascript,json,vue,typescript autocmd BufWritePre <buffer> %s/\s\+$//e
augroup END

" -----------------------------
" Spelling
" -----------------------------
" Don't mark URL-like things as spelling errors
syntax match UrlNoSpell '\w\+:\/\/\S\+' contains=@NoSpell

" Force to use underline for spell check results
" TODO re-apply if the theme is changed
highlight SpellBad
\   cterm=underline,italic
\   ctermfg=red
\   ctermbg=none
\   term=reverse
highlight SpellCap
\   cterm=underline,italic
\   ctermfg=none
\   ctermbg=none
\   term=reverse
highlight SpellLocal
\   cterm=underline,italic
\   ctermfg=cyan
\   ctermbg=none
\   term=reverse
highlight SpellRare
\   cterm=underline,italic
\   ctermfg=cyan
\   ctermbg=none
\   term=reverse

augroup spellconfig
    autocmd!
    " Turn on spelling
    autocmd FileTYpe markdown,gitcommit,gitconfig,gitrebase,text
      \ setlocal spell
augroup END
